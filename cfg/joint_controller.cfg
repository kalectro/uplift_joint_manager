#!/usr/bin/env python
PACKAGE = "uplift_joint_manager"
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("position_influence",  double_t, 0, "Influence of the position error on the final control", 0.5, 0.0, 1.0)
gen.add("velocity_influence",  double_t, 0, "Influence of the velocity error on the final control", 0.5, 0.0, 1.0)

joint_mode_enum = gen.enum([ gen.const("POSITION", int_t, 0, "position control parameters"),
                             gen.const("VELOCITY", int_t, 1, "velocity control parameters") ],
                             "enum to switch between different control modes")

gen.add("control_mode", int_t, 0, "switch between different control modes", 0, 0, 1, edit_method=joint_mode_enum)

gen.add("p_gain",       double_t, 0, "P gain",                0.5, 0.0, 100.0)
# !!! do not use i as a param name. This will result in strange compiler errors !!!
gen.add("i_gain",       double_t, 0, "I gain",                0.0, 0.0, 100.0)
gen.add("d_gain",       double_t, 0, "D gain",                0.0, 0.0, 100.0)
gen.add("max_integral", double_t, 0, "maximum control output due to integral", 0.5, 0.0, 1.0)

motor_mode_enum = gen.enum([ gen.const("DRIVE", int_t, 0, "Regular joint control"),
                             gen.const("FREE_RUNNING", int_t, 1, "Disable joint control letting it spin freely"),
                             gen.const("BRAKE", int_t, 2, "Active braking") ],
                             "enum to control the joint drive mode")

gen.add("motor_mode", int_t, 0, "controls the joint drive mode", 0, 0, 2, edit_method=motor_mode_enum)

gen.add("calibrate_height", bool_t, 0, "calibrates the spine", False)

exit(gen.generate(PACKAGE, "uplift_joint_manager", "Joint"))
